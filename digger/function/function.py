import random
from vk_api.keyboard import VkKeyboard, VkKeyboardColor


def get_random_id():
    """ Get random int32 number (signed) """
    return random.getrandbits(31) * random.choice([-1, 1])


def energy(player, action_time):
    delta = action_time - player.last_energy_action
    delta = delta//60
    if delta >= 10:
        energy_new = (delta//10)*player.energy_regen
        energy_max = energy_new + player.energy
        player.energy = min(energy_max, player.max_energy)
        player.last_energy_action = player.last_energy_action + (energy_new*600)
    return player


def exp(vk, player, token, exp):
    current_exp = player.exp + exp
    if current_exp >= player.exp_need:
        more_exp = current_exp - player.exp_need
        player.lvl = player.lvl + 1
        player.exp = more_exp
        player.exp_need = player.lvl * (9 + player.lvl)
        player.max_energy = 10 + (player.lvl * 2)
        player.energy = player.max_energy
        message = '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã —Ç–µ–ø–µ—Ä—å ' + str(player.lvl) + ' —É—Ä.'
        vk.messages.send(
            access_token=token,
            user_id=str(player.user_id),
            keyboard=get_keyboard(player=player),
            message=message,
            random_id=get_random_id()
        )
    else:
        player.exp = current_exp
    return player


def get_keyboard(player):
    keyboard = VkKeyboard()

    # –ü—Ä–æ—Ñ–∏–ª—å

    if player.place == 'profile':
        keyboard.add_button('–ü—Ä–æ—Ñ–∏–ª—å', color=VkKeyboardColor.DEFAULT, payload={"command": "profile"})
        keyboard.add_line()
        keyboard.add_button('–ú–µ–Ω—é –ø–æ–¥–∑–µ–º–µ–ª—å—è', color=VkKeyboardColor.PRIMARY, payload={"command": "cave"})

    # –ü–æ–¥–∑–µ–º–µ–ª—å–µ

    if player.place == 'cave':
        if player.build.lift:
            keyboard.add_button('–ó–µ–º–ª–∏', color=VkKeyboardColor.PRIMARY, payload={"command": "land"})
        keyboard.add_button('–®–∞—Ö—Ç–∞', color=VkKeyboardColor.PRIMARY, payload={"command": "mine"})
        keyboard.add_line()
        keyboard.add_button('üî® –ó–¥–∞–Ω–∏—è', color=VkKeyboardColor.DEFAULT, payload={"command": "cave_build"})
        if player.build.forge:
            keyboard.add_button('‚öí –ò–∑–≥–æ—Ç–æ–≤–∏—Ç—å', color=VkKeyboardColor.DEFAULT, payload={"command": "forge"})
        if player.build.tavern:
            keyboard.add_button('‚öî –¢–∞–≤–µ—Ä–Ω–∞', color=VkKeyboardColor.DEFAULT)
        keyboard.add_line()
        keyboard.add_button('–ü—Ä–æ—Ñ–∏–ª—å', color=VkKeyboardColor.DEFAULT, payload={"command": "profile"})
        keyboard.add_button('üè§ –°–∫–ª–∞–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "stock"})

    # –ü–æ–¥–∑–µ–º–µ–ª—å–µ - –º–µ–Ω—é —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞

    if player.place == 'cave_build':
        keyboard.add_button('–ú–µ–Ω—é –ø–æ–¥–∑–µ–º–µ–ª—å—è', color=VkKeyboardColor.PRIMARY, payload={"command": "cave"})
        keyboard.add_button('üè§ –°–∫–ª–∞–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "stock"})
        keyboard.add_line()
        keyboard.add_button('üî® üè§ –°–∫–ª–∞–¥', color=VkKeyboardColor.POSITIVE, payload={"command": "build_stock"})
        if not player.build.lift:
            keyboard.add_button('üî® –õ–∏—Ñ—Ç', color=VkKeyboardColor.POSITIVE, payload={"command": "build_lift"})
        if not player.build.forge or not player.build.tavern:
            keyboard.add_line()
        if not player.build.forge:
            keyboard.add_button('üî® ‚öí –ö—É–∑–Ω–∏—Ü–∞', color=VkKeyboardColor.POSITIVE, payload={"command": "build_forge"})
        if not player.build.tavern:
            keyboard.add_button('üî® üç∫ –¢–∞–≤–µ—Ä–Ω–∞', color=VkKeyboardColor.POSITIVE, payload={"command": "build_tavern"})


    # –®–∞—Ö—Ç–∞

    if player.place == 'mine':
        keyboard.add_button('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø–æ–¥–∑–µ–º–µ–ª—å–µ', color=VkKeyboardColor.PRIMARY, payload={"command": "cave"})
        keyboard.add_button('üè§ –°–∫–ª–∞–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "stock"})
        keyboard.add_line()
        keyboard.add_button('‚óæ‚õè –î–æ–±—ã—Ç—å –∫–∞–º–µ–Ω—å', color=VkKeyboardColor.POSITIVE, payload={"command": "dig_stone"})
        if player.forge.pickaxe_iron or player.forge.pickaxe_diamond or player.forge.pickaxe_skull:
            keyboard.add_button('üíé‚õè –î–æ–±—ã—Ç—å –∞–ª–º–∞–∑—ã', color=VkKeyboardColor.POSITIVE, payload={"command": "dig_diamond"})
        if player.forge.pickaxe_stone:
            keyboard.add_line()
            keyboard.add_button('‚óΩ‚õè –î–æ–±—ã—Ç—å –∂–µ–ª–µ–∑–æ', color=VkKeyboardColor.POSITIVE, payload={"command": "dig_iron"})
            keyboard.add_button('‚ú®‚õè –î–æ–±—ã—Ç—å –∑–æ–ª–æ—Ç–æ', color=VkKeyboardColor.POSITIVE, payload={"command": "dig_gold"})

    # –ö—É–∑–Ω–∏—Ü–∞

    if player.place == 'forge':
        keyboard.add_button('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø–æ–¥–∑–µ–º–µ–ª—å–µ', color=VkKeyboardColor.PRIMARY, payload={"command": "cave"})
        keyboard.add_line()
        keyboard.add_button('‚öí ‚õè –ö–∏—Ä–∫–∏', color=VkKeyboardColor.DEFAULT, payload={"command": "forge_pickaxe"})
        keyboard.add_button('‚öí ‚öî –ê—Ä—Å–µ–Ω–∞–ª', color=VkKeyboardColor.DEFAULT, payload={"command": "forge_kit"})

    # –ö—É–∑–Ω–∏—Ü–∞ - –∫—Ä–∞—Ñ—Ç –Ω–∞–±–æ—Ä–æ–≤

    if player.place == 'forge_kit':
        keyboard.add_button('–ú–µ–Ω—é –∫—É–∑–Ω–∏—Ü—ã', color=VkKeyboardColor.PRIMARY, payload={"command": "forge"})
        keyboard.add_button('‚öî –ê—Ä—Å–µ–Ω–∞–ª', color=VkKeyboardColor.DEFAULT, payload={"command": "forge_kit_info"})
        keyboard.add_button('üè§ –°–∫–ª–∞–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "stock"})
        keyboard.add_line()
        keyboard.add_button('‚öí üó° –ú–µ—á', color=VkKeyboardColor.POSITIVE, payload={"command": "craft_sword"})
        keyboard.add_button('‚öí üèπ –õ—É–∫', color=VkKeyboardColor.POSITIVE, payload={"command": "craft_bow"})
        keyboard.add_line()
        keyboard.add_button('‚öí üîÆ –°—Ñ–µ—Ä–∞', color=VkKeyboardColor.POSITIVE, payload={"command": "craft_orb"})

    # –ö—É–∑–Ω–∏—Ü–∞ - –∫—Ä–∞—Ñ—Ç –∫–∏—Ä–æ–∫

    if player.place == 'forge_pickaxe':
        keyboard.add_button('–ú–µ–Ω—é –∫—É–∑–Ω–∏—Ü—ã', color=VkKeyboardColor.PRIMARY, payload={"command": "forge"})
        keyboard.add_button('‚õè –ö–∏—Ä–∫–∏', color=VkKeyboardColor.DEFAULT, payload={"command": "forge_pickaxe_info"})
        keyboard.add_button('üè§ –°–∫–ª–∞–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "stock"})
        if not player.forge.pickaxe_iron or not player.forge.pickaxe_stone:
            keyboard.add_line()
            if not player.forge.pickaxe_iron:
                keyboard.add_button('‚õè ‚óΩ –ñ–µ–ª–µ–∑–Ω–∞—è', color=VkKeyboardColor.POSITIVE, payload={"command": "craft_pickaxe_iron"})
            if not player.forge.pickaxe_stone:
                keyboard.add_button('‚õè ‚óæ –ö–∞–º–µ–Ω–Ω–∞—è', color=VkKeyboardColor.POSITIVE, payload={"command": "craft_pickaxe_stone"})
        if not player.forge.pickaxe_skull or not player.forge.pickaxe_diamond:
            keyboard.add_line()
            if not player.forge.pickaxe_skull:
                keyboard.add_button('‚õè üíÄ –ö–æ—Å—Ç—è–Ω–∞—è', color=VkKeyboardColor.POSITIVE, payload={"command": "craft_pickaxe_skull"})
            if not player.forge.pickaxe_diamond:
                keyboard.add_button('‚õè üíé –ê–ª–º–∞–∑–Ω–∞—è', color=VkKeyboardColor.POSITIVE, payload={"command": "craft_pickaxe_diamond"})

    # –¢–∞–≤–µ—Ä–Ω–∞

    if player.place == 'tavern':
        keyboard.add_button('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø–æ–¥–∑–µ–º–µ–ª—å–µ', color=VkKeyboardColor.PRIMARY, payload={"command": "cave"})
        keyboard.add_button('üè§ –°–∫–ª–∞–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "stock"})
        keyboard.add_button('‚öî –ê—Ä—Å–µ–Ω–∞–ª', color=VkKeyboardColor.DEFAULT, payload={"command": "forge_kit_info"})
        keyboard.add_line()
        keyboard.add_button('üç∫ üó° –í–æ–∏–Ω', color=VkKeyboardColor.POSITIVE, payload={"command": "craft_sword"})
        keyboard.add_button('üç∫ üèπ –õ—É—á–Ω–∏–∫', color=VkKeyboardColor.POSITIVE, payload={"command": "craft_bow"})
        keyboard.add_line()
        keyboard.add_button('üç∫ üîÆ –ú–∞–≥', color=VkKeyboardColor.POSITIVE, payload={"command": "craft_orb"})

    return keyboard.get_keyboard()
