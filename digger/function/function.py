import random
import vk_api
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
from .CONSTANT import *


def get_random_id():
    """ Get random int32 number (signed) """
    return random.getrandbits(31) * random.choice([-1, 1])


def energy(player, action_time):
    delta = action_time - player.last_energy_action
    delta = delta // 60
    if delta >= 5:
        energy_new = (delta // 5) * player.energy_regen
        energy_max = energy_new + player.energy
        player.energy = min(energy_max, player.max_energy)
        player.last_energy_action = player.last_energy_action + (energy_new * 300)
    return player


def exp(player, exp):
    current_exp = player.exp + exp
    if current_exp >= player.exp_need:
        more_exp = current_exp - player.exp_need
        player.lvl = player.lvl + 1
        player.exp = more_exp
        player.exp_need = ((player.lvl ** LVL_Z) * LVL_X) - player.exp_need
        message = '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã —Ç–µ–ø–µ—Ä—å ' + str(player.lvl) + ' —É—Ä.\n' + \
                  '–≠–Ω–µ—Ä–≥–∏—è: ' + str(player.energy) + '/' + str(player.max_energy) + ' ‚ö°\n'
        send(player=player, message=message)
    else:
        player.exp = current_exp
    return player


def send(player, message, keyboard=False):
    if not keyboard:
        keyboard = get_keyboard(player=player)
    vk = vk_connect()
    vk.messages.send(
        access_token=token(),
        user_id=str(player.user_id),
        keyboard=keyboard,
        message=message,
        random_id=get_random_id()
    )


def vk_connect():
    vk_session = vk_api.VkApi(token=token())
    vk = vk_session.get_api()
    return vk


def token():
    token_list = ['dca8e5d9e3fb7d614429e8594fddb92ac1c123c6d925db0d81fa495743812e2cf9654801170376388a999',
                  'cc7ba24c70f316a4b5f8d3611a56c544ba7d54f3229c53e8a2f4111a044cc50934888361356e08c66482c',
                  '8f85b07e455f06cd4e0389b3fbd0cc11d1a96a284facef48d763709670312da698002ca678b5771dd77e4',
                  ]
    return random.choice(token_list)


def get_keyboard(player, action_time=0):
    keyboard = VkKeyboard()

    if player.place == 'reg':
        name = player.last_name + ' ' + player.first_name
        keyboard.add_button(name, color=VkKeyboardColor.DEFAULT)

    # –ü—Ä–æ—Ñ–∏–ª—å

    if player.place == 'profile':
        if player.build.citadel:
            keyboard.add_button('–ó–µ–º–ª–∏', color=VkKeyboardColor.PRIMARY, payload={"command": "land"})
        keyboard.add_button('–ü–æ–¥–∑–µ–º–µ–ª—å–µ', color=VkKeyboardColor.PRIMARY, payload={"command": "cave"})
        keyboard.add_line()
        keyboard.add_button('–ò–Ω—Ñ–æ', color=VkKeyboardColor.DEFAULT, payload={"command": "profile"})
        keyboard.add_button('üîù –¢–æ–ø üîù', color=VkKeyboardColor.DEFAULT, payload={"command": "top"})
        keyboard.add_button('‚öîüë• –ê—Ä–º–∏—è', color=VkKeyboardColor.DEFAULT, payload={"command": "army"})
        keyboard.add_line()
        color = VkKeyboardColor.POSITIVE
        if action_time - player.bonus_time <= BONUS_TIME:
            color = VkKeyboardColor.NEGATIVE
        keyboard.add_button('üéÅ –ë–æ–Ω—É—Å', color=color, payload={"command": "bonus"})

    if player.place == 'top':
        keyboard.add_button('–ü–æ–¥–∑–µ–º–µ–ª—å–µ', color=VkKeyboardColor.PRIMARY, payload={"command": "cave"})
        keyboard.add_line()
        keyboard.add_button('üëë –ü–æ —É—Ä–æ–≤–Ω—é üëë', color=VkKeyboardColor.DEFAULT, payload={"command": "top_lvl"})
        keyboard.add_line()
        keyboard.add_button('‚öî –ü–æ –Ω–∞–ø–∞–¥–µ–Ω–∏—è–º ‚öî', color=VkKeyboardColor.DEFAULT, payload={"command": "top_attack"})
        keyboard.add_line()
        keyboard.add_button('üõ° –ü–æ –æ–±–æ—Ä–æ–Ω–∞–º üõ°', color=VkKeyboardColor.DEFAULT, payload={"command": "top_defend"})

    # –ó–µ–º–ª–∏

    elif player.place == 'land':
        keyboard.add_button('‚öî –í–æ–π–Ω–∞', color=VkKeyboardColor.DEFAULT, payload={"command": "war"})
        keyboard.add_button('üéØ –ü–æ—Ö–æ–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "crusade"})
        keyboard.add_button('–ü–æ–¥–∑–µ–º–µ–ª—å–µ', color=VkKeyboardColor.PRIMARY, payload={"command": "cave"})
        keyboard.add_line()
        keyboard.add_button('üî® –ó–¥–∞–Ω–∏—è', color=VkKeyboardColor.DEFAULT, payload={"command": "land_build"})
        keyboard.add_button('üå≤ ‚õè –†—É–±–∏—Ç—å', color=VkKeyboardColor.POSITIVE, payload={"command": "cut_wood"})
        keyboard.add_line()
        keyboard.add_button('ü§¥ –õ–æ—Ä–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "profile"})
        keyboard.add_button('üè§ –°–∫–ª–∞–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "stock"})

    # –ó–µ–º–ª–∏ - –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ

    elif player.place == 'land_build':
        tower_lvl_up = 'üî® –ë–∞—à–Ω—è ' + str(player.build.tower_lvl + 1) + ' —É—Ä.'
        wall_lvl_up = 'üî® –°—Ç–µ–Ω–∞ ' + str(player.build.wall_lvl + 1) + ' —É—Ä.'
        keyboard.add_button('–ó–µ–º–ª–∏', color=VkKeyboardColor.PRIMARY, payload={"command": "land"})
        keyboard.add_button('üè§ –°–∫–ª–∞–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "stock"})
        keyboard.add_line()
        keyboard.add_button(tower_lvl_up, color=VkKeyboardColor.POSITIVE, payload={"command": "build_tower"})
        keyboard.add_button(wall_lvl_up, color=VkKeyboardColor.POSITIVE, payload={"command": "build_wall"})

    # –ü–æ–¥–∑–µ–º–µ–ª—å–µ

    elif player.place == 'cave':
        if player.build.citadel:
            keyboard.add_button('–ó–µ–º–ª–∏', color=VkKeyboardColor.PRIMARY, payload={"command": "land"})
        keyboard.add_button('–®–∞—Ö—Ç–∞', color=VkKeyboardColor.PRIMARY, payload={"command": "mine"})
        keyboard.add_line()
        keyboard.add_button('üî® –ó–¥–∞–Ω–∏—è', color=VkKeyboardColor.DEFAULT, payload={"command": "cave_build"})
        if player.build.forge:
            keyboard.add_button('‚öí –ö—É–∑–Ω–∏—Ü–∞', color=VkKeyboardColor.DEFAULT, payload={"command": "forge"})
        if player.build.tavern:
            keyboard.add_button('üç∫ –¢–∞–≤–µ—Ä–Ω–∞', color=VkKeyboardColor.DEFAULT, payload={"command": "tavern"})
        keyboard.add_line()
        keyboard.add_button('ü§¥ –õ–æ—Ä–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "profile"})
        keyboard.add_button('üè§ –°–∫–ª–∞–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "stock"})

    # –ü–æ–¥–∑–µ–º–µ–ª—å–µ - –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ

    elif player.place == 'cave_build':
        stock_lvl_up = 'üî® üè§ –°–∫–ª–∞–¥ ' + str(player.stock.lvl + 1) + ' —É—Ä.'
        keyboard.add_button('–ü–æ–¥–∑–µ–º–µ–ª—å–µ', color=VkKeyboardColor.PRIMARY, payload={"command": "cave"})
        keyboard.add_button('üè§ –°–∫–ª–∞–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "stock"})
        keyboard.add_line()
        keyboard.add_button(stock_lvl_up, color=VkKeyboardColor.POSITIVE, payload={"command": "build_stock"})
        if not player.build.citadel:
            keyboard.add_button('üî® üè∞ –¶–∏—Ç–∞–¥–µ–ª—å', color=VkKeyboardColor.POSITIVE, payload={"command": "build_citadel"})
        if not player.build.forge or not player.build.tavern:
            keyboard.add_line()
        if not player.build.forge:
            keyboard.add_button('üî® ‚öí –ö—É–∑–Ω–∏—Ü–∞', color=VkKeyboardColor.POSITIVE, payload={"command": "build_forge"})
        if not player.build.tavern:
            keyboard.add_button('üî® üç∫ –¢–∞–≤–µ—Ä–Ω–∞', color=VkKeyboardColor.POSITIVE, payload={"command": "build_tavern"})

    # –®–∞—Ö—Ç–∞

    elif player.place == 'mine':
        keyboard.add_button('–ü–æ–¥–∑–µ–º–µ–ª—å–µ', color=VkKeyboardColor.PRIMARY, payload={"command": "cave"})
        keyboard.add_button('üè§ –°–∫–ª–∞–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "stock"})
        keyboard.add_line()
        keyboard.add_button('‚óæ‚õè –î–æ–±—ã—Ç—å –∫–∞–º–µ–Ω—å', color=VkKeyboardColor.POSITIVE, payload={"command": "dig_stone"})
        if player.forge.pickaxe_iron or player.forge.pickaxe_diamond or player.forge.pickaxe_skull:
            keyboard.add_button('üíé‚õè –î–æ–±—ã—Ç—å –∞–ª–º–∞–∑—ã', color=VkKeyboardColor.POSITIVE, payload={"command": "dig_diamond"})
        if player.forge.pickaxe_stone:
            keyboard.add_line()
            keyboard.add_button('‚óΩ‚õè –î–æ–±—ã—Ç—å –∂–µ–ª–µ–∑–æ', color=VkKeyboardColor.POSITIVE, payload={"command": "dig_iron"})
            keyboard.add_button('‚ú®‚õè –î–æ–±—ã—Ç—å –∑–æ–ª–æ—Ç–æ', color=VkKeyboardColor.POSITIVE, payload={"command": "dig_gold"})

    # –ö—É–∑–Ω–∏—Ü–∞

    elif player.place == 'forge':
        keyboard.add_button('–ü–æ–¥–∑–µ–º–µ–ª—å–µ', color=VkKeyboardColor.PRIMARY, payload={"command": "cave"})
        keyboard.add_line()
        keyboard.add_button('‚öí ‚õè –ö–∏—Ä–∫–∏', color=VkKeyboardColor.DEFAULT, payload={"command": "forge_pickaxe"})
        keyboard.add_button('‚öí ‚öî –ê—Ä—Å–µ–Ω–∞–ª', color=VkKeyboardColor.DEFAULT, payload={"command": "forge_kit"})

    # –ö—É–∑–Ω–∏—Ü–∞ - –∫—Ä–∞—Ñ—Ç –Ω–∞–±–æ—Ä–æ–≤

    elif player.place == 'forge_kit':
        keyboard.add_button('‚öí üó° –ú–µ—á', color=VkKeyboardColor.POSITIVE, payload={"command": "craft_sword"})
        keyboard.add_button('‚öí üèπ –õ—É–∫', color=VkKeyboardColor.POSITIVE, payload={"command": "craft_bow"})
        keyboard.add_button('‚öí üîÆ –°—Ñ–µ—Ä–∞', color=VkKeyboardColor.POSITIVE, payload={"command": "craft_orb"})
        keyboard.add_line()
        keyboard.add_button('‚öí üó° x10', color=VkKeyboardColor.POSITIVE, payload={"command": "craft_sword_x10"})
        keyboard.add_button('‚öí üèπ x10', color=VkKeyboardColor.POSITIVE, payload={"command": "craft_bow_x10"})
        keyboard.add_button('‚öí üîÆ x10', color=VkKeyboardColor.POSITIVE, payload={"command": "craft_orb_x10"})
        keyboard.add_line()
        keyboard.add_button('–ö—É–∑–Ω–∏—Ü–∞', color=VkKeyboardColor.PRIMARY, payload={"command": "forge"})
        keyboard.add_button('‚öî –ê—Ä—Å–µ–Ω–∞–ª', color=VkKeyboardColor.DEFAULT, payload={"command": "forge_kit_info"})
        keyboard.add_button('üè§ –°–∫–ª–∞–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "stock"})

    # –ö—É–∑–Ω–∏—Ü–∞ - –∫—Ä–∞—Ñ—Ç –∫–∏—Ä–æ–∫

    elif player.place == 'forge_pickaxe':
        keyboard.add_button('–ö—É–∑–Ω–∏—Ü–∞', color=VkKeyboardColor.PRIMARY, payload={"command": "forge"})
        keyboard.add_button('‚õè –ö–∏—Ä–∫–∏', color=VkKeyboardColor.DEFAULT, payload={"command": "forge_pickaxe_info"})
        keyboard.add_button('üè§ –°–∫–ª–∞–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "stock"})
        if not player.forge.pickaxe_iron or not player.forge.pickaxe_stone:
            keyboard.add_line()
            if not player.forge.pickaxe_iron:
                keyboard.add_button('‚õè ‚óΩ –ñ–µ–ª–µ–∑–Ω–∞—è', color=VkKeyboardColor.POSITIVE,
                                    payload={"command": "craft_pickaxe_iron"})
            if not player.forge.pickaxe_stone:
                keyboard.add_button('‚õè ‚óæ –ö–∞–º–µ–Ω–Ω–∞—è', color=VkKeyboardColor.POSITIVE,
                                    payload={"command": "craft_pickaxe_stone"})
        if not player.forge.pickaxe_skull or not player.forge.pickaxe_diamond:
            keyboard.add_line()
            if not player.forge.pickaxe_skull:
                keyboard.add_button('‚õè üíÄ –ö–æ—Å—Ç—è–Ω–∞—è', color=VkKeyboardColor.POSITIVE,
                                    payload={"command": "craft_pickaxe_skull"})
            if not player.forge.pickaxe_diamond:
                keyboard.add_button('‚õè üíé –ê–ª–º–∞–∑–Ω–∞—è', color=VkKeyboardColor.POSITIVE,
                                    payload={"command": "craft_pickaxe_diamond"})

    # –¢–∞–≤–µ—Ä–Ω–∞

    elif player.place == 'tavern':
        keyboard.add_button('üó°üë• –í–æ–∏–Ω', color=VkKeyboardColor.POSITIVE, payload={"command": "buy_warrior"})
        keyboard.add_button('üèπüë• –õ—É—á–Ω–∏–∫', color=VkKeyboardColor.POSITIVE, payload={"command": "buy_archer"})
        keyboard.add_button('üîÆüë• –ú–∞–≥', color=VkKeyboardColor.POSITIVE, payload={"command": "buy_wizard"})
        keyboard.add_line()
        keyboard.add_button('üó°üë• x10', color=VkKeyboardColor.POSITIVE, payload={"command": "buy_warrior_x10"})
        keyboard.add_button('üèπüë• x10', color=VkKeyboardColor.POSITIVE, payload={"command": "buy_archer_x10"})
        keyboard.add_button('üîÆüë• x10', color=VkKeyboardColor.POSITIVE, payload={"command": "buy_wizard_x10"})
        keyboard.add_line()
        keyboard.add_button('–ü–æ–¥–∑–µ–º–µ–ª—å–µ', color=VkKeyboardColor.PRIMARY, payload={"command": "cave"})
        keyboard.add_button('üè§ –°–∫–ª–∞–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "stock"})
        keyboard.add_button('‚öî –ê—Ä—Å–µ–Ω–∞–ª', color=VkKeyboardColor.DEFAULT, payload={"command": "forge_kit_info"})

    # –í–æ–π–Ω–∞

    elif player.place == 'war':
        keyboard.add_button('–ó–µ–º–ª–∏', color=VkKeyboardColor.PRIMARY, payload={"command": "land"})
        keyboard.add_button('‚öîüë• –ê—Ä–º–∏—è', color=VkKeyboardColor.DEFAULT, payload={"command": "army"})
        keyboard.add_line()
        keyboard.add_button('üîé –ü–æ–∏—Å–∫', color=VkKeyboardColor.POSITIVE, payload={"command": "find_enemy"})
        keyboard.add_button('‚öî –ù–∞–ø–∞—Å—Ç—å', color=VkKeyboardColor.NEGATIVE, payload={"command": "attack"})
        keyboard.add_line()
        keyboard.add_button('üõ° –©–∏—Ç ‚è≥', color=VkKeyboardColor.DEFAULT, payload={"command": "shield_info"})

    # –ü–æ—Ö–æ–¥

    elif player.place == 'crusade':
        keyboard.add_button('–ó–µ–º–ª–∏', color=VkKeyboardColor.PRIMARY, payload={"command": "land"})
        keyboard.add_button('‚öîüë• –ê—Ä–º–∏—è', color=VkKeyboardColor.DEFAULT, payload={"command": "army"})
        keyboard.add_line()
        color = VkKeyboardColor.POSITIVE
        if action_time - player.crusade.crusade_last_time <= CRUSADE_TIME:
            color = VkKeyboardColor.NEGATIVE
        keyboard.add_button('üéØ –í –ø—É—Ç—å', color=color, payload={"command": "crusade_wildman"})
        keyboard.add_line()
        keyboard.add_button('üè§ –°–∫–ª–∞–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "stock"})

    elif player.place == 'crusade_wildman':
        keyboard.add_button('‚öîüë• –ê—Ä–º–∏—è', color=VkKeyboardColor.DEFAULT, payload={"command": "army"})
        keyboard.add_line()
        keyboard.add_button('–°–±–µ–∂–∞—Ç—å', color=VkKeyboardColor.NEGATIVE, payload={"command": "crusade_exit"})
        keyboard.add_button('‚öî –ê—Ç–∞–∫–∞ ‚öî', color=VkKeyboardColor.POSITIVE, payload={"command": "crusade_attack"})

    elif player.place == 'crusade_wildman_after':
        keyboard.add_button('‚öîüë• –ê—Ä–º–∏—è', color=VkKeyboardColor.DEFAULT, payload={"command": "army"})
        keyboard.add_line()
        keyboard.add_button('üè∞ –î–æ–º–æ–π', color=VkKeyboardColor.DEFAULT, payload={"command": "crusade_home"})
        keyboard.add_button('üéØ –í –ø—É—Ç—å', color=VkKeyboardColor.POSITIVE, payload={"command": "crusade_rogue"})
        keyboard.add_line()
        keyboard.add_button('üè§ –°–∫–ª–∞–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "stock"})

    elif player.place == 'crusade_rogue':
        keyboard.add_button('‚öîüë• –ê—Ä–º–∏—è', color=VkKeyboardColor.DEFAULT, payload={"command": "army"})
        keyboard.add_line()
        keyboard.add_button('–°–±–µ–∂–∞—Ç—å', color=VkKeyboardColor.NEGATIVE, payload={"command": "crusade_exit"})
        keyboard.add_button('‚öî –ê—Ç–∞–∫–∞ ‚öî', color=VkKeyboardColor.POSITIVE, payload={"command": "crusade_attack"})

    elif player.place == 'crusade_rogue_after':
        keyboard.add_button('‚öîüë• –ê—Ä–º–∏—è', color=VkKeyboardColor.DEFAULT, payload={"command": "army"})
        keyboard.add_line()
        keyboard.add_button('üè∞ –î–æ–º–æ–π', color=VkKeyboardColor.DEFAULT, payload={"command": "crusade_home"})
        keyboard.add_button('üéØ –í –ø—É—Ç—å', color=VkKeyboardColor.POSITIVE, payload={"command": "crusade_golem"})
        keyboard.add_line()
        keyboard.add_button('üè§ –°–∫–ª–∞–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "stock"})

    elif player.place == 'crusade_golem':
        keyboard.add_button('‚öîüë• –ê—Ä–º–∏—è', color=VkKeyboardColor.DEFAULT, payload={"command": "army"})
        keyboard.add_line()
        keyboard.add_button('–°–±–µ–∂–∞—Ç—å', color=VkKeyboardColor.NEGATIVE, payload={"command": "crusade_exit"})
        keyboard.add_button('‚öî –ê—Ç–∞–∫–∞ ‚öî', color=VkKeyboardColor.POSITIVE, payload={"command": "crusade_attack"})

    elif player.place == 'crusade_golem_after':
        keyboard.add_button('‚öîüë• –ê—Ä–º–∏—è', color=VkKeyboardColor.DEFAULT, payload={"command": "army"})
        keyboard.add_line()
        keyboard.add_button('üè∞ –î–æ–º–æ–π', color=VkKeyboardColor.DEFAULT, payload={"command": "crusade_home"})
        keyboard.add_button('üéØ –í –ø—É—Ç—å', color=VkKeyboardColor.POSITIVE, payload={"command": "crusade_elemental"})
        keyboard.add_line()
        keyboard.add_button('üè§ –°–∫–ª–∞–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "stock"})

    elif player.place == 'crusade_elemental':
        keyboard.add_button('‚öîüë• –ê—Ä–º–∏—è', color=VkKeyboardColor.DEFAULT, payload={"command": "army"})
        keyboard.add_line()
        keyboard.add_button('–°–±–µ–∂–∞—Ç—å', color=VkKeyboardColor.NEGATIVE, payload={"command": "crusade_exit"})
        keyboard.add_button('‚öî –ê—Ç–∞–∫–∞ ‚öî', color=VkKeyboardColor.POSITIVE, payload={"command": "crusade_attack"})

    return keyboard.get_keyboard()
