from .constant import *


import random
import vk_api
from vk_api.keyboard import VkKeyboard, VkKeyboardColor


def get_random_id():
    """ Get random int32 number (signed) """
    return random.getrandbits(31) * random.choice([-1, 1])


def amount(command):
    count = 1
    part = command.split()
    if len(part) > 1:
        if part[1].isdigit():
            count = int(part[1])
    return count


def in_items(items, slug):
    for item in items:
        if item.slug == slug:
            return item
    return False


def pickaxe_info(items):
    if not in_items(items, 'stone_pickaxe'):
        message_pickaxe_stone = '‚óæ –ö–∞–º–µ–Ω–Ω–∞—è –∫–∏—Ä–∫–∞ ‚óæ: ' + str(STONE_PICKAXE) + icon('stone') + '\n'
    else:
        message_pickaxe_stone = '‚óæ –ö–∞–º–µ–Ω–Ω–∞—è –∫–∏—Ä–∫–∞ ‚óæ: –ï—Å—Ç—å\n'
    if not in_items(items, 'iron_pickaxe'):
        message_pickaxe_iron = '‚óΩ –ñ–µ–ª–µ–∑–Ω–∞—è –∫–∏—Ä–∫–∞ ‚óΩ: ' + str(IRON_PICKAXE) + icon('iron') + '\n'
    else:
        message_pickaxe_iron = '‚óΩ –ñ–µ–ª–µ–∑–Ω–∞—è –∫–∏—Ä–∫–∞ ‚óΩ: –ï—Å—Ç—å\n'
    if not in_items(items, 'diamond_pickaxe'):
        message_pickaxe_diamond = 'üíé –ê–ª–º–∞–∑–Ω–∞—è –∫–∏—Ä–∫–∞ üíé: ' + str(DIAMOND_PICKAXE) + icon('diamond') + '\n'
    else:
        message_pickaxe_diamond = 'üíé –ê–ª–º–∞–∑–Ω–∞—è –∫–∏—Ä–∫–∞ üíé: –ï—Å—Ç—å\n'
    message = message_pickaxe_stone + message_pickaxe_iron + message_pickaxe_diamond
    return message


def energy(player, action_time):
    delta = action_time - player.last_energy_action
    delta = delta // 60
    if delta >= 6:
        energy_new = (delta // 6) * player.energy_regen
        energy_sum = energy_new + player.energy
        player.energy = min(energy_sum, player.max_energy)
        player.last_energy_action = player.last_energy_action + (energy_new * 360)
    return player


def exp(player, chat_info, exp):
    current_exp = player.exp + exp
    if current_exp >= exp_need(player.lvl):
        more_exp = current_exp - exp_need(player.lvl)
        player.lvl = player.lvl + 1
        player.exp = more_exp
        player.energy = player.max_energy
        message = '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã —Ç–µ–ø–µ—Ä—å ' + str(player.lvl) + ' —É—Ä.\n' + \
                  '–≠–Ω–µ—Ä–≥–∏—è: ' + str(player.energy) + '/' + str(player.max_energy) + ' ‚ö°\n'
        send(chat_info, message)
    else:
        player.exp = current_exp
    return player


def send(chat_info, message, keyboard=None):
    if not message == '–ø—É—Å—Ç–æ':
        vk = vk_connect()
        if chat_info['user_id'] == chat_info['chat_id']:
            vk.messages.send(
                access_token=token(),
                peer_id=str(chat_info['user_id']),
                keyboard=keyboard,
                message=message,
                random_id=get_random_id()
            )
        else:
            message = '@id' + str(chat_info['user_id']) + '(' + chat_info['nick'] + ')\n' + message
            vk.messages.send(
                access_token=token(),
                peer_id=str(chat_info['peer_id']),
                chat_id=str(chat_info['chat_id']),
                keyboard=keyboard_for_chat(),
                message=message,
                random_id=get_random_id()
            )


def keyboard_for_chat():
    keyboard = VkKeyboard()

    keyboard.add_button('ü§¥ –õ–æ—Ä–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "–ø—Ä–æ—Ñ–∏–ª—å"})
    keyboard.add_button('‚ùì –ö–æ–º–∞–Ω–¥—ã', color=VkKeyboardColor.DEFAULT, payload={"command": "!–∫–æ–º–∞–Ω–¥—ã"})
    keyboard.add_button('üéÅ –ë–æ–Ω—É—Å', color=VkKeyboardColor.POSITIVE, payload={"command": "–±–æ–Ω—É—Å"})

    return keyboard.get_keyboard()


def vk_connect():
    vk_session = vk_api.VkApi(token=token())
    vk = vk_session.get_api()
    return vk


def token():
    return 'e93e44b3eac62bca17249148d0013240b6fdfaaacea23b08981dbaf90d931490b424f334de3a1912a2f8e'


def commands():
    message = '–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n' + \
              icon('stock') + '–†–µ—Å—É—Ä—Å—ã:\n' + \
              '&#12288;' + icon('stone') + '–ö–∞–º–µ–Ω—å [–∫–æ–ª-–≤–æ] - –¥–æ–±—ã—Ç—å [–∫–æ–ª-–≤–æ] –∫–∞–º–Ω—è\n' + \
              '&#12288;' + icon('wood') + '–î–µ—Ä–µ–≤–æ [–∫–æ–ª-–≤–æ] - –¥–æ–±—ã—Ç—å [–∫–æ–ª-–≤–æ] –¥–µ—Ä–µ–≤–∞\n' + \
              '&#12288;' + icon('iron') + '–ñ–µ–ª–µ–∑–æ [–∫–æ–ª-–≤–æ] - –¥–æ–±—ã—Ç—å [–∫–æ–ª-–≤–æ] –∂–µ–ª–µ–∑–∞\n' + \
              '&#12288;' + icon('diamond') + '–ö—Ä–∏—Å—Ç–∞–ª—ã [–∫–æ–ª-–≤–æ] - –¥–æ–±—ã—Ç—å [–∫–æ–ª-–≤–æ] –∫—Ä–∏—Å—Ç–∞–ª–æ–≤\n' + \
              '&#12288;' + icon('stock') + '–°–∫–ª–∞–¥ - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–∫–ª–∞–¥\n' + \
              '\n' + icon('build') + '–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ:\n' + \
              '&#12288;' + icon('build') + '–°—Ç—Ä–æ–∏—Ç—å –ø–æ–¥–∑–µ–º–µ–ª—å–µ - –º–µ–Ω—é —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –≤ –ø–æ–¥–∑–µ–º–µ–ª—å–µ\n' + \
              '&#12288;' + icon('build') + '–°—Ç—Ä–æ–∏—Ç—å –∑–µ–º–ª–∏ - –º–µ–Ω—é —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –≤ –∑–µ–º–ª—è—Ö\n' + \
              '&#12288;' + icon('build') + '–°—Ç—Ä–æ–∏—Ç—å [–∑–¥–∞–Ω–∏–µ] - –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –∏–ª–∏ —É–ª—É—á—à–∏—Ç—å –∑–¥–∞–Ω–∏–µ\n' + \
              '&#12288;' + icon('build') + '–°–ø–∏—Å–æ–∫ –∑–¥–∞–Ω–∏–π:\n' + \
              '&#12288;&#12288;' + icon('stock') + '–°–∫–ª–∞–¥\n' + \
              '&#12288;&#12288;' + icon('craft') + '–ö—É–∑–Ω–∏—Ü–∞\n' + \
              '&#12288;&#12288;' + icon('tavern') + '–¢–∞–≤–µ—Ä–Ω–∞\n' + \
              '&#12288;&#12288;' + icon('citadel') + '–¶–∏—Ç–∞–¥–µ–ª—å\n' + \
              '&#12288;&#12288;' + icon('build') + '–ë–∞—à–Ω—è\n' + \
              '&#12288;&#12288;' + icon('build') + '–°—Ç–µ–Ω–∞\n' + \
              '\n' + icon('war') + '–í–æ–π–Ω–∞:\n' + \
              '&#12288;' + icon('sword') + '–í–æ–∏–Ω [–∫–æ–ª-–≤–æ] - –Ω–∞–Ω—è—Ç—å [–∫–æ–ª-–≤–æ] –≤–æ–∏–Ω–æ–≤\n' + \
              '&#12288;' + icon('bow') + '–õ—É—á–Ω–∏–∫ [–∫–æ–ª-–≤–æ] - –Ω–∞–Ω—è—Ç—å [–∫–æ–ª-–≤–æ] –ª—É—á–Ω–∏–∫–æ–≤\n' + \
              '&#12288;' + icon('orb') + '–ú–∞–≥ [–∫–æ–ª-–≤–æ] - –Ω–∞–Ω—è—Ç—å [–∫–æ–ª-–≤–æ] –º–∞–≥–æ–≤\n' + \
              '&#12288;' + icon('war') + '–ê—Ä–º–∏—è - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ—é –∞—Ä–º–∏—é\n' + \
              '&#12288;' + icon('citadel') + '–ó–¥–∞–Ω–∏—è - —Å–ø–∏—Å–æ–∫ –∑–¥–∞–Ω–∏–π –≤–ª–∏—è—é—â–∏—Ö –Ω–∞ –∞—Ä–º–∏—é\n' + \
              '&#12288;' + icon('shield') + '–©–∏—Ç - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ —â–∏—Ç–∞ –æ—Ç –Ω–∞–ø–∞–¥–µ–Ω–∏–π\n' + \
              '&#12288;' + icon('search') + '–ü–æ–∏—Å–∫ - –ø–æ–∏—Å–∫ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –¥–ª—è –Ω–∞–ø–∞–¥–µ–Ω–∏—è\n' + \
              '&#12288;' + icon('war') + '–ê—Ç–∞–∫–∞ - –Ω–∞–ø–∞—Å—Ç—å –Ω–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞\n' + \
              '\n' + icon('craft') + '–ö—É–∑–Ω–∏—Ü–∞:\n' + \
              '&#12288;' + icon('craft') + '–ö–æ–≤–∞—Ç—å [–ø—Ä–µ–¥–º–µ—Ç] - –∫–æ–≤–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã –≤ –∫—É–∑–Ω–∏—Ü–µ\n' + \
              '&#12288;' + icon('craft') + '–°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤:\n' + \
              '&#12288;' + icon('get') + icon('stone') + '–ö–∞–º–µ–Ω–Ω–∞—è –∫–∏—Ä–∫–∞\n' + \
              '&#12288;' + icon('get') + icon('iron') + '–ñ–µ–ª–µ–∑–Ω–∞—è –∫–∏—Ä–∫–∞\n' + \
              '&#12288;' + icon('get') + icon('diamond') + '–ö—Ä–∏—Å—Ç–∞–ª—å–Ω–∞—è –∫–∏—Ä–∫–∞\n' + \
              '\n' + icon('other') + '–†–∞–∑–Ω–æ–µ:\n' + \
              '&#12288;' + icon('bonus') + '–ë–æ–Ω—É—Å - –ø–æ–ª—É—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å\n' + \
              '&#12288;' + icon('lvl') + '–¢–æ–ø –ª–≤–ª - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤ –ø–æ —É—Ä–æ–≤–Ω—è–º\n' + \
              '&#12288;' + icon('profile') + '–ü—Ä–æ—Ñ–∏–ª—å - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å\n'
    return message


def icon(name):
    icons = {
        'wood': ' üå≤',
        'stone': ' ‚óæ',
        'iron': ' ‚óΩ',
        'gold': ' ‚ú®',
        'diamond': ' üíé',
        'sword': ' üó°',
        'bow': ' üèπ',
        'orb': ' üîÆ',
        'exp': ' üìö',
        'search': ' üîé',
        'energy': ' ‚ö°',
        'get': ' ‚õè',
        'build': ' üî®',
        'skull': ' üíÄ',
        'craft': ' ‚öí',
        'stock': ' üè§',
        'tavern': ' üç∫',
        'bonus': ' üéÅ',
        'enemy': ' üëæ',
        'lvl': ' üëë',
        'lose': ' ‚ò†',
        'time': ' ‚è≥',
        'mans': ' üë•',
        'profile': ' ü§¥',
        'war': ' ‚öî',
        'target': ' üéØ',
        'citadel': ' üè∞',
        'other': ' üí¨',
        'shield': ' üõ°',
        'help': ' ‚ùì',
    }
    return icons[name]


def exp_need(lvl):
    need = {
        1: 10,
        2: 14,
        3: 17,
        4: 20,
        5: 24,
        6: 29,
        7: 33,
        8: 38,
        9: 48,
        10: 68,
        11: 69,
        12: 71,
        13: 74,
        14: 78,
        15: 83,
        16: 89,
        17: 96,
        18: 104,
        19: 113,
        20: 123,
        21: 134,
        22: 146,
        23: 159,
        24: 173,
        25: 188,
        26: 204,
        27: 221,
        28: 239,
        29: 258,
        30: 278,
        31: 299,
        32: 321,
        33: 344,
        34: 368,
        35: 393,
        36: 398,
        37: 403,
        38: 408,
        39: 413,
        40: 418,
        41: 423,
        42: 428,
        43: 433,
        44: 438,
        45: 443,
        46: 448,
        47: 453,
        48: 458,
        49: 463,
        50: 2000,
    }
    return need[lvl]


def get_keyboard(player, action_time=0):
    keyboard = VkKeyboard()

    if player.place == 'reg':
        name = player.last_name + ' ' + player.first_name
        keyboard.add_button(name, color=VkKeyboardColor.DEFAULT)

    # –ü—Ä–æ—Ñ–∏–ª—å

    if player.place == 'profile':
        keyboard.add_button('–ó–µ–º–ª–∏', color=VkKeyboardColor.PRIMARY, payload={"command": "–∑–µ–º–ª–∏"})
        keyboard.add_button('–ü–æ–¥–∑–µ–º–µ–ª—å–µ', color=VkKeyboardColor.PRIMARY, payload={"command": "–ø–æ–¥–∑–µ–º–µ–ª—å–µ"})
        keyboard.add_line()
        keyboard.add_button('–ò–Ω—Ñ–æ', color=VkKeyboardColor.DEFAULT, payload={"command": "–ø—Ä–æ—Ñ–∏–ª—å"})
        keyboard.add_button('üîù –¢–æ–ø üîù', color=VkKeyboardColor.DEFAULT, payload={"command": "—Ç–æ–ø"})
        keyboard.add_button('‚öî –ê—Ä–º–∏—è', color=VkKeyboardColor.DEFAULT, payload={"command": "–∞—Ä–º–∏—è"})
        keyboard.add_line()
        color = VkKeyboardColor.POSITIVE
        if action_time - player.bonus_time <= BONUS_TIME:
            color = VkKeyboardColor.NEGATIVE
        keyboard.add_button('üéÅ –ë–æ–Ω—É—Å', color=color, payload={"command": "–±–æ–Ω—É—Å"})

    if player.place == 'top':
        keyboard.add_button('–ü–æ–¥–∑–µ–º–µ–ª—å–µ', color=VkKeyboardColor.PRIMARY, payload={"command": "–ø–æ–¥–∑–µ–º–µ–ª—å–µ"})
        keyboard.add_line()
        keyboard.add_button('üëë –ü–æ —É—Ä–æ–≤–Ω—é üëë', color=VkKeyboardColor.DEFAULT, payload={"command": "—Ç–æ–ø –ª–≤–ª"})
        # keyboard.add_line()
        # keyboard.add_button('‚öî –ü–æ –Ω–∞–ø–∞–¥–µ–Ω–∏—è–º ‚öî', color=VkKeyboardColor.DEFAULT, payload={"command": "top_attack"})
        # keyboard.add_line()
        # keyboard.add_button('üõ° –ü–æ –æ–±–æ—Ä–æ–Ω–∞–º üõ°', color=VkKeyboardColor.DEFAULT, payload={"command": "top_defend"})

    # –ó–µ–º–ª–∏

    elif player.place == 'land':
        if player.build.citadel:
            keyboard.add_button('‚öî –í–æ–π–Ω–∞', color=VkKeyboardColor.DEFAULT, payload={"command": "–≤–æ–π–Ω–∞"})
        if player.build.barracks or player.build.archery or player.build.magic:
            keyboard.add_button('üéØ –ù–∞–Ω—è—Ç—å', color=VkKeyboardColor.DEFAULT, payload={"command": "–Ω–∞–Ω—è—Ç—å"})
        keyboard.add_button('–ü–æ–¥–∑–µ–º–µ–ª—å–µ', color=VkKeyboardColor.PRIMARY, payload={"command": "–ø–æ–¥–∑–µ–º–µ–ª—å–µ"})
        keyboard.add_line()
        keyboard.add_button('üî® –ó–¥–∞–Ω–∏—è', color=VkKeyboardColor.DEFAULT, payload={"command": "—Å—Ç—Ä–æ–∏—Ç—å –∑–µ–º–ª–∏"})
        keyboard.add_button('üå≤ ‚õè –†—É–±–∏—Ç—å', color=VkKeyboardColor.POSITIVE, payload={"command": "–¥–µ—Ä–µ–≤–æ"})
        keyboard.add_line()
        keyboard.add_button('ü§¥ –õ–æ—Ä–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "–ø—Ä–æ—Ñ–∏–ª—å"})
        keyboard.add_button('‚ùì –ö–æ–º–∞–Ω–¥—ã', color=VkKeyboardColor.DEFAULT, payload={"command": "!–∫–æ–º–∞–Ω–¥—ã"})
        keyboard.add_button('üè§ –°–∫–ª–∞–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "—Å–∫–ª–∞–¥"})

    # –ù–∞–π–º

    elif player.place == 'army':
        keyboard.add_button('–ó–µ–º–ª–∏', color=VkKeyboardColor.PRIMARY, payload={"command": "–∑–µ–º–ª–∏"})
        keyboard.add_button('üè§ –°–∫–ª–∞–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "—Å–∫–ª–∞–¥"})
        keyboard.add_line()
        keyboard.add_button('üó° –í–æ–∏–Ω', color=VkKeyboardColor.POSITIVE, payload={"command": "–≤–æ–∏–Ω"})
        keyboard.add_button('üèπ –õ—É—á–Ω–∏–∫', color=VkKeyboardColor.POSITIVE, payload={"command": "–ª—É—á–Ω–∏–∫"})
        keyboard.add_button('üîÆ –ú–∞–≥', color=VkKeyboardColor.POSITIVE, payload={"command": "–º–∞–≥"})

    # –ó–µ–º–ª–∏ - –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ

    elif player.place == 'land_build':
        tower_lvl_up = 'üî® –ë–∞—à–Ω—è ' + str(player.build.tower_lvl + 1) + ' —É—Ä.'
        wall_lvl_up = 'üî® –°—Ç–µ–Ω–∞ ' + str(player.build.wall_lvl + 1) + ' —É—Ä.'
        keyboard.add_button('–ó–µ–º–ª–∏', color=VkKeyboardColor.PRIMARY, payload={"command": "–∑–µ–º–ª–∏"})
        keyboard.add_button('üè§ –°–∫–ª–∞–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "—Å–∫–ª–∞–¥"})
        keyboard.add_line()
        keyboard.add_button(tower_lvl_up, color=VkKeyboardColor.POSITIVE, payload={"command": "—Å—Ç—Ä–æ–∏—Ç—å –±–∞—à–Ω—è"})
        keyboard.add_button(wall_lvl_up, color=VkKeyboardColor.POSITIVE, payload={"command": "—Å—Ç—Ä–æ–∏—Ç—å —Å—Ç–µ–Ω–∞"})

    # –ü–æ–¥–∑–µ–º–µ–ª—å–µ

    elif player.place == 'cave':
        keyboard.add_button('–ó–µ–º–ª–∏', color=VkKeyboardColor.PRIMARY, payload={"command": "–∑–µ–º–ª–∏"})
        keyboard.add_button('–®–∞—Ö—Ç–∞', color=VkKeyboardColor.PRIMARY, payload={"command": "—à–∞—Ö—Ç–∞"})
        keyboard.add_line()
        keyboard.add_button('üî® –ó–¥–∞–Ω–∏—è', color=VkKeyboardColor.DEFAULT, payload={"command": "—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–¥–∑–µ–º–µ–ª—å–µ"})
        if player.build.forge:
            keyboard.add_button('‚öí –ö—É–∑–Ω–∏—Ü–∞', color=VkKeyboardColor.DEFAULT, payload={"command": "–∫—É–∑–Ω–∏—Ü–∞"})
        if player.build.tavern:
            keyboard.add_button('üç∫ –¢–∞–≤–µ—Ä–Ω–∞', color=VkKeyboardColor.DEFAULT, payload={"command": "—Ç–∞–≤–µ—Ä–Ω–∞"})
        keyboard.add_line()
        keyboard.add_button('ü§¥ –õ–æ—Ä–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "–ø—Ä–æ—Ñ–∏–ª—å"})
        keyboard.add_button('‚ùì –ö–æ–º–∞–Ω–¥—ã', color=VkKeyboardColor.DEFAULT, payload={"command": "!–∫–æ–º–∞–Ω–¥—ã"})
        keyboard.add_button('üè§ –°–∫–ª–∞–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "—Å–∫–ª–∞–¥"})

    # –ü–æ–¥–∑–µ–º–µ–ª—å–µ - –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ

    elif player.place == 'cave_build':
        stock_lvl_up = 'üî® üè§ –°–∫–ª–∞–¥ ' + str(player.build.stock.lvl + 1) + ' —É—Ä.'
        keyboard.add_button('–ü–æ–¥–∑–µ–º–µ–ª—å–µ', color=VkKeyboardColor.PRIMARY, payload={"command": "–ø–æ–¥–∑–µ–º–µ–ª—å–µ"})
        keyboard.add_button('üè§ –°–∫–ª–∞–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "—Å–∫–ª–∞–¥"})
        keyboard.add_line()
        keyboard.add_button(stock_lvl_up, color=VkKeyboardColor.POSITIVE, payload={"command": "—Å—Ç—Ä–æ–∏—Ç—å —Å–∫–ª–∞–¥"})
        if not player.build.citadel:
            keyboard.add_button('üî® üè∞ –¶–∏—Ç–∞–¥–µ–ª—å', color=VkKeyboardColor.POSITIVE, payload={"command": "—Å—Ç—Ä–æ–∏—Ç—å —Ü–∏—Ç–∞–¥–µ–ª—å"})
        if not player.build.forge or not player.build.tavern:
            keyboard.add_line()
        if not player.build.forge:
            keyboard.add_button('üî® ‚öí –ö—É–∑–Ω–∏—Ü–∞', color=VkKeyboardColor.POSITIVE, payload={"command": "—Å—Ç—Ä–æ–∏—Ç—å –∫—É–∑–Ω–∏—Ü–∞"})
        if not player.build.tavern:
            keyboard.add_button('üî® üç∫ –¢–∞–≤–µ—Ä–Ω–∞', color=VkKeyboardColor.POSITIVE, payload={"command": "—Å—Ç—Ä–æ–∏—Ç—å —Ç–∞–≤–µ—Ä–Ω–∞"})

    # –®–∞—Ö—Ç–∞

    elif player.place == 'mine':
        stone = in_items(player.inventory.items.all(), 'stone_pickaxe')
        iron = in_items(player.inventory.items.all(), 'iron_pickaxe')
        keyboard.add_button('–ü–æ–¥–∑–µ–º–µ–ª—å–µ', color=VkKeyboardColor.PRIMARY, payload={"command": "–ø–æ–¥–∑–µ–º–µ–ª—å–µ"})
        keyboard.add_button('üè§ –°–∫–ª–∞–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "—Å–∫–ª–∞–¥"})
        keyboard.add_line()
        keyboard.add_button('‚óæ‚õè –î–æ–±—ã—Ç—å –∫–∞–º–µ–Ω—å', color=VkKeyboardColor.POSITIVE, payload={"command": "–∫–∞–º–µ–Ω—å"})
        if iron:
            keyboard.add_line()
            keyboard.add_button('üíé‚õè –î–æ–±—ã—Ç—å –∫—Ä–∏—Å—Ç–∞–ª—ã', color=VkKeyboardColor.POSITIVE, payload={"command": "–∫—Ä–∏—Å—Ç–∞–ª—ã"})
        if stone:
            keyboard.add_line()
            keyboard.add_button('‚óΩ‚õè –î–æ–±—ã—Ç—å –∂–µ–ª–µ–∑–æ', color=VkKeyboardColor.POSITIVE, payload={"command": "–∂–µ–ª–µ–∑–æ"})

    # –ö—É–∑–Ω–∏—Ü–∞

    elif player.place == 'forge':
        keyboard.add_button('–ü–æ–¥–∑–µ–º–µ–ª—å–µ', color=VkKeyboardColor.PRIMARY, payload={"command": "–ø–æ–¥–∑–µ–º–µ–ª—å–µ"})
        keyboard.add_line()
        keyboard.add_button('‚öí ‚õè –ö–∏—Ä–∫–∏', color=VkKeyboardColor.DEFAULT, payload={"command": "–∫–∏—Ä–∫–∏"})

    # –ö—É–∑–Ω–∏—Ü–∞ - –∫—Ä–∞—Ñ—Ç –∫–∏—Ä–æ–∫

    elif player.place == 'forge_pickaxe':
        stone = in_items(player.inventory.items.all(), 'stone_pickaxe')
        iron = in_items(player.inventory.items.all(), 'iron_pickaxe')
        diamond = in_items(player.inventory.items.all(), 'diamond_pickaxe')
        keyboard.add_button('–ü–æ–¥–∑–µ–º–µ–ª—å–µ', color=VkKeyboardColor.PRIMARY, payload={"command": "–ø–æ–¥–∑–µ–º–µ–ª—å–µ"})
        keyboard.add_button('‚õè –ö–∏—Ä–∫–∏', color=VkKeyboardColor.DEFAULT, payload={"command": "–∫–∏—Ä–∫–∏"})
        keyboard.add_button('üè§ –°–∫–ª–∞–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "—Å–∫–ª–∞–¥"})
        if not stone or not iron:
            keyboard.add_line()
            if not iron:
                keyboard.add_button('‚õè ‚óΩ –ñ–µ–ª–µ–∑–Ω–∞—è', color=VkKeyboardColor.POSITIVE,
                                    payload={"command": "–∫–æ–≤–∞—Ç—å –∂–µ–ª–µ–∑–Ω–∞—è –∫–∏—Ä–∫–∞"})
            if not stone:
                keyboard.add_button('‚õè ‚óæ –ö–∞–º–µ–Ω–Ω–∞—è', color=VkKeyboardColor.POSITIVE,
                                    payload={"command": "–∫–æ–≤–∞—Ç—å –∫–∞–º–µ–Ω–Ω–∞—è –∫–∏—Ä–∫–∞"})
        if not diamond:
            keyboard.add_line()
            keyboard.add_button('‚õè üíé –ö—Ä–∏—Å—Ç–∞–ª—å–Ω–∞—è', color=VkKeyboardColor.POSITIVE,
                                payload={"command": "–∫–æ–≤–∞—Ç—å –∫—Ä–∏—Å—Ç–∞–ª—å–Ω–∞—è –∫–∏—Ä–∫"})

    # –¢–∞–≤–µ—Ä–Ω–∞

    # elif player.place == 'tavern':
        # keyboard.add_button('–ü–æ–¥–∑–µ–º–µ–ª—å–µ', color=VkKeyboardColor.PRIMARY, payload={"command": "cave"})
        # keyboard.add_button('üè§ –°–∫–ª–∞–¥', color=VkKeyboardColor.DEFAULT, payload={"command": "stock"})
        # keyboard.add_button('‚öî –ê—Ä—Å–µ–Ω–∞–ª', color=VkKeyboardColor.DEFAULT, payload={"command": "forge_kit_info"})

    # –í–æ–π–Ω–∞

    elif player.place == 'war':
        keyboard.add_button('–ó–µ–º–ª–∏', color=VkKeyboardColor.PRIMARY, payload={"command": "–∑–µ–º–ª–∏"})
        keyboard.add_button('‚öîüë• –ê—Ä–º–∏—è', color=VkKeyboardColor.DEFAULT, payload={"command": "–∞—Ä–º–∏—è"})
        keyboard.add_line()
        keyboard.add_button('üîé –ü–æ–∏—Å–∫', color=VkKeyboardColor.POSITIVE, payload={"command": "–ø–æ–∏—Å–∫"})
        keyboard.add_button('‚öî –ù–∞–ø–∞—Å—Ç—å', color=VkKeyboardColor.NEGATIVE, payload={"command": "–∞—Ç–∞–∫–∞"})
        keyboard.add_line()
        keyboard.add_button('üõ° –©–∏—Ç ‚è≥', color=VkKeyboardColor.DEFAULT, payload={"command": "—â–∏—Ç"})

    return keyboard.get_keyboard()
