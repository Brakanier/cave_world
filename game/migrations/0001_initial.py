# Generated by Django 2.1.5 on 2019-04-11 13:00

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Build',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.BigIntegerField(db_index=True, unique=True)),
                ('forge', models.BooleanField(default=False)),
                ('tavern', models.BooleanField(default=False)),
                ('citadel', models.BooleanField(default=False)),
                ('tower_lvl', models.IntegerField(default=0)),
                ('wall_lvl', models.IntegerField(default=0)),
                ('stone_mine_lvl', models.IntegerField(default=0)),
                ('wood_mine_lvl', models.IntegerField(default=0)),
                ('iron_mine_lvl', models.IntegerField(default=0)),
                ('diamond_mine_lvl', models.IntegerField(default=0)),
                ('altar', models.BooleanField(default=False)),
                ('exchange', models.BooleanField(default=False)),
                ('barracks', models.BooleanField(default=False)),
                ('archery', models.BooleanField(default=False)),
                ('magic', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Здание',
                'verbose_name_plural': 'Здания',
            },
        ),
        migrations.CreateModel(
            name='Chest',
            fields=[
                ('id', models.AutoField(db_index=True, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=50)),
                ('slug', models.CharField(blank=True, db_index=True, max_length=30)),
            ],
            options={
                'verbose_name': 'Сундук',
                'verbose_name_plural': 'Сундуки',
            },
        ),
        migrations.CreateModel(
            name='ChestItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chance', models.FloatField(default=0)),
                ('chest', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='game.Chest')),
            ],
        ),
        migrations.CreateModel(
            name='ChestTrophy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chance', models.FloatField(default=0)),
                ('chest', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='game.Chest')),
            ],
        ),
        migrations.CreateModel(
            name='Effect',
            fields=[
                ('id', models.AutoField(db_index=True, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=50)),
                ('value', models.FloatField(default=0)),
            ],
            options={
                'verbose_name': 'Эффект',
                'verbose_name_plural': 'Эффекты',
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.BigIntegerField(db_index=True, unique=True)),
            ],
            options={
                'verbose_name': 'Инвентарь',
                'verbose_name_plural': 'Инвентари',
            },
        ),
        migrations.CreateModel(
            name='InventoryChest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(default=0)),
                ('chest', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='game.Chest')),
                ('inventory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='game.Inventory')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryTrophy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(default=0)),
                ('inventory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='game.Inventory')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(db_index=True, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=50)),
                ('slug', models.CharField(blank=True, db_index=True, max_length=30)),
                ('effects', models.ManyToManyField(to='game.Effect')),
            ],
            options={
                'verbose_name': 'Предмет',
                'verbose_name_plural': 'Предметы',
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.BigIntegerField(db_index=True, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('nickname', models.CharField(db_index=True, max_length=30, unique=True)),
                ('lvl', models.IntegerField(default=1)),
                ('exp', models.BigIntegerField(default=0)),
                ('energy', models.IntegerField(default=20)),
                ('max_energy', models.IntegerField(default=20)),
                ('last_energy_action', models.BigIntegerField(default=0)),
                ('energy_regen', models.IntegerField(default=1)),
                ('bonus_time', models.BigIntegerField(default=0)),
                ('place', models.CharField(default='cave', max_length=50)),
                ('build', models.OneToOneField(null=True, on_delete=models.SET(None), to='game.Build')),
                ('inventory', models.OneToOneField(null=True, on_delete=models.SET(None), to='game.Inventory')),
            ],
            options={
                'verbose_name': 'Игрок',
                'verbose_name_plural': 'Игроки',
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.BigIntegerField(db_index=True, unique=True)),
                ('lvl', models.IntegerField(default=1)),
                ('max', models.IntegerField(default=60)),
                ('wood', models.IntegerField(default=0)),
                ('stone', models.IntegerField(default=0)),
                ('diamond', models.IntegerField(default=0)),
                ('iron', models.IntegerField(default=0)),
                ('gold', models.IntegerField(default=0)),
                ('skull', models.IntegerField(default=0)),
                ('get_passive_last_time', models.BigIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Склад',
                'verbose_name_plural': 'Склады',
            },
        ),
        migrations.CreateModel(
            name='Trophy',
            fields=[
                ('id', models.AutoField(db_index=True, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=50)),
                ('slug', models.CharField(blank=True, db_index=True, max_length=30)),
                ('value', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Трофей(дроп)',
                'verbose_name_plural': 'Трофеи(дроп)',
            },
        ),
        migrations.CreateModel(
            name='War',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.BigIntegerField(db_index=True, unique=True)),
                ('enemy_id', models.BigIntegerField(blank=True, null=True)),
                ('shield', models.IntegerField(default=0)),
                ('find_last_time', models.BigIntegerField(default=0)),
                ('war_last_time', models.BigIntegerField(default=0)),
                ('defend_last_time', models.BigIntegerField(default=0)),
                ('boss_last_time', models.BigIntegerField(default=0)),
                ('crusade_last_time', models.BigIntegerField(default=0)),
                ('crusade_part', models.IntegerField(default=0)),
                ('enemy', models.CharField(blank=True, default='', max_length=30)),
                ('enemy_army', models.IntegerField(default=0)),
                ('warrior', models.IntegerField(default=0)),
                ('archer', models.IntegerField(default=0)),
                ('wizard', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Война',
                'verbose_name_plural': 'Войны',
            },
        ),
        migrations.AddField(
            model_name='player',
            name='war',
            field=models.OneToOneField(null=True, on_delete=models.SET(None), to='game.War'),
        ),
        migrations.AddField(
            model_name='inventorytrophy',
            name='trophy',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='game.Trophy'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='chests',
            field=models.ManyToManyField(blank=True, through='game.InventoryChest', to='game.Chest'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='items',
            field=models.ManyToManyField(blank=True, to='game.Item'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='trophy',
            field=models.ManyToManyField(blank=True, through='game.InventoryTrophy', to='game.Trophy'),
        ),
        migrations.AddField(
            model_name='chesttrophy',
            name='trophy',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='game.Trophy'),
        ),
        migrations.AddField(
            model_name='chestitem',
            name='item',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='game.Item'),
        ),
        migrations.AddField(
            model_name='chest',
            name='items_chance',
            field=models.ManyToManyField(blank=True, through='game.ChestItem', to='game.Item'),
        ),
        migrations.AddField(
            model_name='chest',
            name='trophy_chance',
            field=models.ManyToManyField(blank=True, through='game.ChestTrophy', to='game.Trophy'),
        ),
        migrations.AddField(
            model_name='build',
            name='stock',
            field=models.OneToOneField(null=True, on_delete=models.SET(None), to='game.Stock'),
        ),
    ]
